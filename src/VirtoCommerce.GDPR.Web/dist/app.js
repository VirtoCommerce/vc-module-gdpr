(()=>{var e;e="virtoCommerce.gdpr",void 0!==AppDependencies&&AppDependencies.push(e),angular.module(e,[]).config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("workspace.gdpr",{url:"/GDPR",templateUrl:"$(Platform)/Scripts/common/templates/home.tpl.html",controller:["$scope","platformWebApp.bladeNavigationService",function(e,t){t.showBlade({id:"gdprMain",currentEntity:{id:null},controller:"virtoCommerce.gdpr.gdprMainController",template:"Modules/$(VirtoCommerce.GDPR)/Scripts/blades/gdpr-main.tpl.html",isClosingDisabled:!0})}]})}]).run(["platformWebApp.mainMenuService","platformWebApp.widgetService","$state",function(e,t,r){var o={path:"browse/GDPR",icon:"fas fa-key",title:"GDPR",priority:100,action:function(){r.go("workspace.gdpr")},permission:"GDPR:access"};e.addMenuItem(o)}]),angular.module("virtoCommerce.gdpr").controller("virtoCommerce.gdpr.contactDetailController",["$scope","platformWebApp.dialogService","virtoCommerce.gdpr.webApi",function(e,t,r){var o,i=e.blade;i.headIcon="fas fa-address-card",i.toolbarCommands=[{name:"gdpr.blades.contact-detail.commands.remove.label",icon:"fas fa-eraser",executeMethod:function(){var o={id:"confirmDelete",title:"gdpr.blades.contact-detail.commands.remove.message.title",message:"gdpr.blades.contact-detail.commands.remove.message.text",callback:function(t){t&&(i.isLoading=!0,r.delete({id:i.currentEntityId},(function(){e.bladeClose(),i.parentBlade.refresh()})))}};t.showConfirmationDialog(o)},canExecuteMethod:function(){return!0},permission:"virtoCommerce.gdpr:delete"}],o=i.currentEntity,i.currentEntity=angular.copy(o),i.origEntity=o,i.isLoading=!1}]),angular.module("virtoCommerce.gdpr").controller("virtoCommerce.gdpr.contactListController",["$scope","virtoCommerce.gdpr.webApi","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","platformWebApp.ui-grid.extension","platformWebApp.angularToMomentFormatConverter",function(e,t,r,o,i,a){e.uiGridConstants=o.uiGridConstants;var n=e.blade;n.title="gdpr.blades.contact-list.title",n.headIcon="fas fa-user-friends";var l=r.bladeNavigationService;n.refresh=function(r){n.isLoading=!0;var i={memberType:n.memberType,memberId:n.currentEntity.id,keyword:n.searchKeyword,deepSearch:!!n.searchKeyword,sort:o.getSortExpression(e),skip:(e.pageSettings.currentPage-1)*e.pageSettings.itemsPerPageCount,take:e.pageSettings.itemsPerPageCount,objectType:"Member"};n.searchCriteria&&angular.extend(i,n.searchCriteria),t.search(i,(function(t){n.isLoading=!1,e.pageSettings.totalItems=t.totalCount,Array.isArray(t.results)&&t.results.length&&(_.each(t.results,(function(e){if(e.securityAccounts[0]?(e.email=e.securityAccounts[0].email??"",e.login=e.securityAccounts[0].userName??""):(e.email="",e.login=""),e.birthDate){const t=["January","February","March","April","May","June","July","August","September","October","November","December"],r=new Date(e.birthDate);e.birthday=t[r.getMonth()]+" "+r.getDate()+", "+r.getFullYear()}else e.birthday=""})),t.results[0].outerId||(t.results[0].outerId=null)),e.listEntries=t.results?t.results:[]})),r&&n.parentRefresh&&n.parentRefresh()},e.selectNode=function(t){e.selectedNodeId=t.id;var r={id:"contactDetail",currentEntityId:t.id,currentEntity:t,title:t.fullName,subtitle:"gdpr.blades.contact-detail.subtitle",controller:"virtoCommerce.gdpr.contactDetailController",template:"modules/$(VirtoCommerce.GDPR)/scripts/blades/contact-detail.tpl.html"};l.showBlade(r,n)},n.toolbarCommands=[{name:"platform.commands.refresh",icon:"fa fa-refresh",executeMethod:n.refresh,canExecuteMethod:function(){return!0}}];var c=n.filter={keyword:null};c.criteriaChanged=function(){null===c.keyword&&(n.memberType=void 0),e.pageSettings.currentPage>1?e.pageSettings.currentPage=1:n.refresh()},e.setGridOptions=function(t,o){e.gridOptions=o,i.tryExtendGridOptions(t,o),o.onRegisterApi=function(t){e.gridApi=t,t.core.on.sortChanged(e,(function(){n.isLoading||n.refresh()}))},r.initializePagination(e)},e.clearKeyword=function(){n.searchKeyword=null,n.refresh()}}]),angular.module("virtoCommerce.gdpr").controller("virtoCommerce.gdpr.gdprMainController",["$scope","platformWebApp.dialogService","platformWebApp.bladeUtils","platformWebApp.uiGridHelper","virtoCommerce.customerModule.memberTypesResolverService","platformWebApp.ui-grid.extension",function(e,t,r,o,i,a){e.selectedNodeId=null;var n=e.blade;n.title="gdpr.blades.main-title",n.subtitle="gdpr.blades.main-subtitle",n.headIcon="fas fa-key";var l,c=r.bladeNavigationService;n.openBlade=function(t){e.selectedNodeId=t.id,c.showBlade({id:"contactList",currentEntity:{id:null},title:"gdpr.blades.contact-list.title",controller:"virtoCommerce.gdpr.contactListController",template:"Modules/$(VirtoCommerce.GDPR)/Scripts/blades/contact-list.tpl.html"},n)},l=[{id:1,entityName:"customers",name:"Customers",icon:"fas fa-user"}],n.currentEntities=l,n.isLoading=!1,n.openBlade(l[0])}]),angular.module("virtoCommerce.gdpr").factory("virtoCommerce.gdpr.webApi",["$resource",function(e){return e("api/gdpr",{},{search:{method:"POST",url:"api/gdpr/contacts/search"},delete:{method:"DELETE",url:"api/gdpr/contacts/delete"}})}])})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,